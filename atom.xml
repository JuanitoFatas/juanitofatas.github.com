<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[台北小碼農]]></title>
  <link href="http://JuanitoFatas.github.com/atom.xml" rel="self"/>
  <link href="http://JuanitoFatas.github.com/"/>
  <updated>2011-11-07T09:51:47+08:00</updated>
  <id>http://JuanitoFatas.github.com/</id>
  <author>
    <name><![CDATA[Juanito Fatas Huang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[couldn't parse YAML, psych.rb:148]]></title>
    <link href="http://JuanitoFatas.github.com/blog/2011/11/03/psych-issue/"/>
    <updated>2011-11-03T10:02:00+08:00</updated>
    <id>http://JuanitoFatas.github.com/blog/2011/11/03/psych-issue</id>
    <content type="html"><![CDATA[<p>I&#8217;m blogging with <code>octopress</code> and my ruby version is <code>ruby 1.9.2p290</code></p>

<p>While running:</p>

<p><code>$ rake generate</code></p>

<p>You see this error:</p>

<p><code>/Users/Mac/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 5 column 0 (Psych::SyntaxError)
</code></p>

<p>This error you see is probably <strong>you have some invalid yaml somewhere around your code</strong>.</p>

<blockquote><p>psych.rb is a new ruby YAML parser.</p></blockquote>

<p>You may find solutions from Stack Overflow and octopress support forum below.</p>

<p><a href="http://stackoverflow.com/questions/4980877/rails-error-couldnt-parse-yaml">Rails error, couldn&#8217;t parse YAML</a>  <br/>
<a href="https://github.com/imathis/octopress/issues/57">error with rake generate</a></p>

<p>My case I found it is a simple yaml error when creating new post.
Every new post begins with yaml stuff:</p>

<p>
&#45;&#45;&#45; <br>
layout: post    <br>
title: &#34;some title&#34; <br>   
date: 2011-11-03 10:00 <br>   
comments: true <br>   
&#45;&#45;&#45; <br>
</p>


<p>If you accidentally write:</p>

<p>
&#45;&#45;&#45; <br>
<strong>layout:post</strong> <br>
title: &#34;some title&#34; <br>   
date: 2011-11-03 10:00 <br>   
comments: true <br>   
&#45;&#45;&#45; <br>
</p>


<p>You&#8217;ll see this error because you do not have space between &#39;:&#39; and the following value.
<strong>Make sure you save a space after &#39;:&#39;</strong></p>

<p>Hope it helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[micro ruby notes]]></title>
    <link href="http://JuanitoFatas.github.com/blog/2011/11/03/micro-ruby/"/>
    <updated>2011-11-03T09:58:00+08:00</updated>
    <id>http://JuanitoFatas.github.com/blog/2011/11/03/micro-ruby</id>
    <content type="html"><![CDATA[<p>For my personal cosulting&#8230;  <br/>
No guarantees XD</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span><span class="p">(</span><span class="s1">&#39;huang&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Constructor:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">instance</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><strong>instance variable:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@var</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby naming convention:</strong></p>

<p><strong>methods, variables</strong></p>

<blockquote><p>using line_item instead of lineItem</p></blockquote>

<p><strong>Ruby&#8217;s symbol</strong></p>

<pre><code>":" + var
</code></pre>

<blockquote><p>e.g., :name, :action, :id&#8230;etc.</p></blockquote>

<p><strong>Define a method:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">methodName</span>
</span><span class='line'>  <span class="c1"># your code goes here</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Expression Interpolation:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">say</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="nb">name</span><span class="o">.</span><span class="n">capitalize</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="nb">puts</span> <span class="n">say</span><span class="p">(</span><span class="n">juan</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="s2">&quot;hi, Juan&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby Class:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Class</span> <span class="n">order</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:line_items</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_all_unpaid</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="s1">&#39;paid=0&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">total</span>
</span><span class='line'>      <span class="n">sum</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">line_items</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">li</span><span class="o">|</span> <span class="n">sum</span> <span class="o">+=</span> <span class="n">li</span><span class="o">.</span><span class="n">total</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>A method with &#8220;self.&#8221; is a class-level method</p></blockquote>

<p><strong>Quick access to Instance variable:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Class</span> <span class="no">Car</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:name</span> <span class="c1"># Read &amp; Write</span>
</span><span class='line'>    <span class="kp">attr_reader</span> <span class="ss">:color</span> <span class="c1"># read only</span>
</span><span class='line'>    <span class="kp">attr_writer</span> <span class="ss">:weight</span> <span class="c1"># write only</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Public / Private / Protected :</strong></p>

<blockquote><p>Public for everyone, protected for instances with same class, private instance only.</p></blockquote>

<p><strong>Modules:</strong></p>

<blockquote><p>You can define it but cannot create it. For sharing methods and naming spaces issue.</p></blockquote>

<p><strong>Array:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">7</span><span class="o">.</span><span class="mi">6</span><span class="p">,</span> <span class="s1">&#39;ppl&#39;</span> <span class="o">]</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="o">[</span> <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>&#39;&lt;&lt;&#39; operator (Appending at the end)</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">person</span> <span class="k">in</span> <span class="vi">@people</span>
</span><span class='line'>  <span class="n">age</span> <span class="o">&lt;&lt;</span> <span class="n">person</span><span class="o">.</span><span class="n">age</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Quickly for declaring char array:</strong></p>

<pre><code>a [ 'a', 'b', 'c', 'd'] is equivalent to a %w{a b c d}
</code></pre>

<p><strong>Hash:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sample_hash</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:a</span> <span class="o">=&gt;</span> <span class="s1">&#39;a&#39;</span>
</span><span class='line'>    <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="s1">&#39;b&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>To get value of symbol a:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sample_hash</span><span class="o">[</span><span class="ss">:a</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Hashes and Parameter List:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">redirecto_to</span> <span class="ss">:action</span> <span class="o">=&gt;</span> <span class="s1">&#39;show&#39;</span> <span class="p">,</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">product</span><span class="o">.</span><span class="n">id</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Control Structures:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a&gt;10&#39;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a=3&#39;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a&lt;10&amp;a!=3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">a</span><span class="o">&lt;</span><span class="mi">100</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>with only 1 expression</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s1">&#39;a&gt;10&#39;</span> <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'><span class="n">distance</span> <span class="o">*=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span> <span class="k">while</span> <span class="n">distance</span> <span class="o">&lt;</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Blocks and Iterators:</strong></p>

<p>Single Line Block</p>

<pre><code>{ ... }
</code></pre>

<p>Multi-line Block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">do</span>
</span><span class='line'>  <span class="n">club</span><span class="o">.</span><span class="n">enroll</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span><span class='line'>  <span class="n">person</span><span class="o">.</span><span class="n">socialize</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The block can only invoke right after method call.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">greet</span> <span class="p">(</span><span class="s2">&quot;Huang&quot;</span><span class="p">,</span> <span class="s2">&quot;Ni-hao&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hi&quot;</span> <span class="p">}</span> <span class="c1"># greet is a method</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>method_call (parm1, &#8230;) { block }</p></blockquote>

<p><strong>Example usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="p">}</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="nb">print</span> <span class="s1">&#39;I love you&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Exceptions:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>      <span class="c1">#your code here</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">BlogDataNotFound</span>
</span><span class='line'>    <span class="c1">#do something</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Require:</strong></p>

<blockquote><p>loading resources outside</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">___FILE___</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;/.../test_helper&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby api cosult:</strong></p>

<p><code>$ gem_server</code></p>

<p>Go to <a href="http://localhost:8808">http://localhost:8808</a> for consulting.</p>
]]></content>
  </entry>
  
</feed>
