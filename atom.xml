<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[台北小碼農]]></title>
  <link href="http://JuanitoFatas.github.com/atom.xml" rel="self"/>
  <link href="http://JuanitoFatas.github.com/"/>
  <updated>2011-11-13T23:33:15+08:00</updated>
  <id>http://JuanitoFatas.github.com/</id>
  <author>
    <name><![CDATA[Juanito Fatas Huang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android 原始碼下載及版本控制 - 使用git與repo]]></title>
    <link href="http://JuanitoFatas.github.com/blog/2011/11/08/get-android-source/"/>
    <updated>2011-11-08T10:39:00+08:00</updated>
    <id>http://JuanitoFatas.github.com/blog/2011/11/08/get-android-source</id>
    <content type="html"><![CDATA[<p>要取得Android的原始碼，會需要用到<em>Git</em>和<em>Repo</em>還有<em>Gerrit</em>。
以下解釋一些工具，太冗長，可直接拉到最下方看如何取得Android原始碼。</p>

<h3>什麼是<a href="http://en.wikipedia.org/wiki/Git_(software)">Git</a>?</h3>

<blockquote><p>Git is an open-source version-control system designed to handle
very large projects that are distributed over multiple repositories.</p></blockquote>

<h3>那Git for Android是?</h3>

<blockquote><p>In the context of Android, we use Git for local operations such as
local branching, commits, diffs, and edits. One of the challenges
in setting up the Android project was figuring out how to best support
the outside community&#8211;from the hobbiest community to large OEMs
building mass-market consumer devices. We wanted components to be
replaceable, and we wanted interesting components to be able to grow a
life of their own outside of Android. We first chose a distributed
revision control system, then further narrowed it down to Git.</p></blockquote>

<h3>什麼是<a href="http://en.wikipedia.org/wiki/Repo_(script)">Repo</a>?</h3>

<blockquote><p>Repo is a tool that Google built on top of Git
to manage the many Git repositories, do the uploads
to revision control system, and automate parts of the
Android development workflow.
- from wikipedia</p></blockquote>

<h3>什麼是Gerrit?</h3>

<blockquote><p>Gerrit is a web-based code review system for projects that use git.
Gerrit encourages more centralized use of Git by allowing all authorized
users to submit changes, which are automatically merged if they pass code
review. In addition, Gerrit makes reviewing easier by displaying changes
side by side in-browser and enabling inline comments.</p></blockquote>

<h4>我覺得簡單來說就是：</h4>

<ul>
<li>Git 是玩遊戲存檔的複雜工具</li>
<li>Git for Android 是玩Android遊戲存檔的複雜工具</li>
<li>Repo 是Google推出的遊戲存檔工具</li>
<li>Gerrit 給使用git專案的雲端code review伺服器</li>
</ul>


<h3>安裝Git</h3>

<p>請至<a href="http://git-scm.com/">Git官網</a>下載適合版本。</p>

<h3>安裝repo ( Mac OSX 為例 )</h3>

<p>首先在HOME目錄建立bin資料夾（如果沒有）</p>

<p><code>$ mkdir ~/bin</code></p>

<p>將此資料夾加入環境變數 $PATH</p>

<p><code>$ PATH=~/bin:$PATH</code></p>

<p>下載repo至~/bin/並設置權限為可執行</p>

<p><code>$ curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo &gt; ~/bin/repo</code>
<code>$ chmod a+x ~/bin/repo</code></p>

<h2>基本的工作流程</h2>

<p><img src="http://source.android.com/images/submit-patches-0.png" style="float:right"></p>

<p><ol>
<li>用repo開始一個新的分支</li>
<li>編輯檔案</li>
<li>用git加入Stage changes</li>
<li>用git commit來commit變更</li>
<li>用repo upload來上傳變更至review server</li>
</ol></p>


<p></img></p>

<h2>基本的工作項目：</h2>

<h3>同步clinet端</h3>

<p>同步所有現有的專案：</p>

<p><code>$ repo sync</code></p>

<p>同步被選擇的的專案</p>

<p>`$ repo sync project0 project1 &#8230; projectN</p>

<h3>建立topic branches</h3>

<p>開始一個新分支</p>

<p><code>$ repo start BRANCH_NAME</code></p>

<p>確認是否建立成功</p>

<p><code>$ repo status</code></p>

<p>使用topic branches</p>

<p><code>$ repo start BRANCH_NAME PROJECT</code></p>

<p>切換分支</p>

<p><code>$ git checkout BRANCH_NAME</code></p>

<p>分支列表</p>

<p><code>$ git branch</code> 或是 <code>$ repo branches</code></p>

<p>當下的分支前面有個*號</p>

<p>注意：
有一個bug會使 <code>repo sync</code> 重置到local topic branch。
如果在你運行 <code>repo sync</code> 之後 <code>git branch</code> 顯示 *(no branch)
再運行一次 <code>git checkout</code> 即可。</p>

<h3>Staging files</h3>

<p>添加檔案到stage</p>

<p><code>$ git add ARGUMENTS</code></p>

<p>ARGUMENTS可以是檔案、資料夾&#8230;etc。</p>

<h3>檢視Client的狀態</h3>

<p>列出檔案狀態的清單</p>

<p><code>$ repo status</code></p>

<p>看還沒commit的編輯</p>

<p><code>$ repo diff</code></p>

<h4>git diff與repo diff的差別?</h4>

<p><code>repo diff</code> 顯示本機的編輯（ 不會 列入commit）
<code>git diff</code> 顯示本機的編輯（ 會 列入commit）</p>

<p>在執行<code>git diff</code>之前，確定你是在專案的目錄底下：</p>

<p><code>$ cd ~/WORKING_DIRECTORY/PROJECT</code>  <br/>
<code>$ git diff --cached</code></p>

<h3>提交變更</h3>

<p>提交</p>

<p><code>$ git commit</code></p>

<p>要輸入commit message否則會提交失敗</p>

<h3>上傳變更到Gerrit</h3>

<p>在上傳之前，先更新到最新版本。</p>

<p><code>$ repo sync</code></p>

<p>之後執行</p>

<p><code>$ repo upload</code></p>

<p>會問你要選擇哪個分支到 review server</p>

<h3>修復Sync衝突</h3>

<p>如果 <code>repo sync</code> 顯示 sync conflicts:</p>

<ul>
<li>檢視還沒merged的檔案 (status code = U)</li>
<li><p>去修改編輯有衝突的地方</p></li>
<li><p>變更相關的專案目錄</p></li>
</ul>


<p><code>$ git add .</code>  <br/>
<code>$ git commit</code>  <br/>
<code>$ git rebase --continue</code></p>

<ul>
<li>當rebase完成後開始sync</li>
</ul>


<p><code>$ repo sync PROJECT0 PROJECT1 ... PROJECTN</code></p>

<h3>清理client檔案</h3>

<p>變動之後更新本機工作目錄</p>

<p><code>$ repo sync</code></p>

<p>安全移除舊的topic branches</p>

<p><code>$ repo prune</code></p>

<p>刪除一個client</p>

<p><code>$ rm -rf WORKING_DIRECTORY</code></p>

<p>注意：會永久刪除所有你還沒有上傳的變更</p>

<h1>Git &amp; Repo Cheatsheet</h1>

<p><img src="http://source.android.com/images/git-repo-1.png" style="float:center"></p>

<h2>那究竟怎麼取得 Android 原始碼呢？</h2>

<h3>首先建立一個 <em>Repo Client</em></h3>

<p>建立要放置Android 原始碼的資料夾並切換至此資料夾</p>

<p><code>$ mkdir WORKING_DIRECTORY</code>  <br/>
<code>$ cd WORKING_DIRECTORY</code></p>

<p>初始化repo</p>

<p><code>$ repo init -u https://android.googlesource.com/platform/manifest</code></p>

<p>要使用Gerrit code-review工具，需要輸入與google連結之email、名字。</p>

<p>取得特定Android branch</p>

<p><code>$ repo init -u https://android.googlesource.com/platform/manifest -b android-2.3.7_r1</code></p>

<h3>取得檔案</h3>

<p><code>$ repo sync</code></p>

<p>記得要在剛剛的 WORKING_DIRECTORY</p>

<h3>輸入Android原始碼的公用金鑰</h3>

<h4>會使用到<a href="http://www.gnupg.org/gph/en/manual.html#AEN84">gpg</a> &#8211;import sample_name.gpg</h4>

<p>打開記事本輸入以下內容並另存為 xxx.gpg</p>

<div><script src='https://gist.github.com/1347589.js?file='></script>
<noscript><pre><code>-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

mQGiBEnnWD4RBACt9/h4v9xnnGDou13y3dvOx6/t43LPPIxeJ8eX9WB+8LLuROSV
lFhpHawsVAcFlmi7f7jdSRF+OvtZL9ShPKdLfwBJMNkU66/TZmPewS4m782ndtw7
8tR1cXb197Ob8kOfQB3A9yk2XZ4ei4ZC3i6wVdqHLRxABdncwu5hOF9KXwCgkxMD
u4PVgChaAJzTYJ1EG+UYBIUEAJmfearb0qRAN7dEoff0FeXsEaUA6U90sEoVks0Z
wNj96SA8BL+a1OoEUUfpMhiHyLuQSftxisJxTh+2QclzDviDyaTrkANjdYY7p2cq
/HMdOY7LJlHaqtXmZxXjjtw5Uc2QG8UY8aziU3IE9nTjSwCXeJnuyvoizl9/I1S5
jU5SA/9WwIps4SC84ielIXiGWEqq6i6/sk4I9q1YemZF2XVVKnmI1F4iCMtNKsR4
MGSa1gA8s4iQbsKNWPgp7M3a51JCVCu6l/8zTpA+uUGapw4tWCp4o0dpIvDPBEa9
b/aF/ygcR8mh5hgUfpF9IpXdknOsbKCvM9lSSfRciETykZc4wrRCVGhlIEFuZHJv
aWQgT3BlbiBTb3VyY2UgUHJvamVjdCA8aW5pdGlhbC1jb250cmlidXRpb25AYW5k
cm9pZC5jb20+iGAEExECACAFAknnWD4CGwMGCwkIBwMCBBUCCAMEFgIDAQIeAQIX
gAAKCRDorT+BmrEOeNr+AJ42Xy6tEW7r3KzrJxnRX8mij9z8tgCdFfQYiHpYngkI
2t09Ed+9Bm4gmEO5Ag0ESedYRBAIAKVW1JcMBWvV/0Bo9WiByJ9WJ5swMN36/vAl
QN4mWRhfzDOk/Rosdb0csAO/l8Kz0gKQPOfObtyYjvI8JMC3rmi+LIvSUT9806Up
hisyEmmHv6U8gUb/xHLIanXGxwhYzjgeuAXVCsv+EvoPIHbY4L/KvP5x+oCJIDbk
C2b1TvVk9PryzmE4BPIQL/NtgR1oLWm/uWR9zRUFtBnE411aMAN3qnAHBBMZzKMX
LWBGWE0znfRrnczI5p49i2YZJAjyX1P2WzmScK49CV82dzLo71MnrF6fj+Udtb5+
OgTg7Cow+8PRaTkJEW5Y2JIZpnRUq0CYxAmHYX79EMKHDSThf/8AAwUIAJPWsB/M
pK+KMs/s3r6nJrnYLTfdZhtmQXimpoDMJg1zxmL8UfNUKiQZ6esoAWtDgpqt7Y7s
KZ8laHRARonte394hidZzM5nb6hQvpPjt2OlPRsyqVxw4c/KsjADtAuKW9/d8phb
N8bTyOJo856qg4oOEzKG9eeF7oaZTYBy33BTL0408sEBxiMior6b8LrZrAhkqDjA
vUXRwm/fFKgpsOysxC6xi553CxBUCH2omNV6Ka1LNMwzSp9ILz8jEGqmUtkBszwo
G1S8fXgE0Lq3cdDM/GJ4QXP/p6LiwNF99faDMTV3+2SAOGvytOX6KjKVzKOSsfJQ
hN0DlsIw8hqJc0WISQQYEQIACQUCSedYRAIbDAAKCRDorT+BmrEOeCUOAJ9qmR0l
EXzeoxcdoafxqf6gZlJZlACgkWF7wi2YLW3Oa+jv2QSTlrx4KLM=
=Wi5D
-----END PGP PUBLIC KEY BLOCK-----</code></pre></noscript></div>


<p>把此金鑰加入到gpg key database裡</p>

<p><code>gpg --import sample_name.gpg</code></p>

<p>加入金鑰後可以用來確認git的tag</p>

<p><code>$ git tag -v TAG_NAME</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[couldn't parse YAML, psych.rb:148]]></title>
    <link href="http://JuanitoFatas.github.com/blog/2011/11/03/psych-issue/"/>
    <updated>2011-11-03T10:02:00+08:00</updated>
    <id>http://JuanitoFatas.github.com/blog/2011/11/03/psych-issue</id>
    <content type="html"><![CDATA[<p>I&#8217;m blogging with <code>octopress</code> and my ruby version is <code>ruby 1.9.2p290</code></p>

<p>While running:</p>

<p><code>$ rake generate</code></p>

<p>You see this error:</p>

<p><code>/Users/Mac/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/psych.rb:148:in `parse': couldn't parse YAML at line 5 column 0 (Psych::SyntaxError)
</code></p>

<p>This error you see is probably <strong>you have some invalid yaml somewhere around your code</strong>.</p>

<blockquote><p>psych.rb is a new ruby YAML parser.</p></blockquote>

<p>You may find solutions from Stack Overflow and octopress support forum below.</p>

<p><a href="http://stackoverflow.com/questions/4980877/rails-error-couldnt-parse-yaml">Rails error, couldn&#8217;t parse YAML</a>  <br/>
<a href="https://github.com/imathis/octopress/issues/57">error with rake generate</a></p>

<p>My case I found it is a simple yaml error when creating new post.
Every new post begins with yaml stuff:</p>

<p>
&#45;&#45;&#45; <br>
layout: post    <br>
title: &#34;some title&#34; <br>   
date: 2011-11-03 10:00 <br>   
comments: true <br>   
&#45;&#45;&#45; <br>
</p>


<p>If you accidentally write:</p>

<p>
&#45;&#45;&#45; <br>
<strong>layout:post</strong> <br>
title: &#34;some title&#34; <br>   
date: 2011-11-03 10:00 <br>   
comments: true <br>   
&#45;&#45;&#45; <br>
</p>


<p>You&#8217;ll see this error because you do not have space between &#39;:&#39; and the following value.
<strong>Make sure you save a space after &#39;:&#39;</strong></p>

<p>Hope it helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[micro ruby notes]]></title>
    <link href="http://JuanitoFatas.github.com/blog/2011/11/03/micro-ruby/"/>
    <updated>2011-11-03T09:58:00+08:00</updated>
    <id>http://JuanitoFatas.github.com/blog/2011/11/03/micro-ruby</id>
    <content type="html"><![CDATA[<p>For my personal cosulting&#8230;  <br/>
No guarantees XD</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span><span class="p">(</span><span class="s1">&#39;huang&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Constructor:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">instance</span> <span class="o">=</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><strong>instance variable:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@var</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby naming convention:</strong></p>

<p><strong>methods, variables</strong></p>

<blockquote><p>using line_item instead of lineItem</p></blockquote>

<p><strong>Ruby&#8217;s symbol</strong></p>

<pre><code>":" + var
</code></pre>

<blockquote><p>e.g., :name, :action, :id&#8230;etc.</p></blockquote>

<p><strong>Define a method:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">methodName</span>
</span><span class='line'>  <span class="c1"># your code goes here</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Expression Interpolation:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">say</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="nb">name</span><span class="o">.</span><span class="n">capitalize</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="nb">puts</span> <span class="n">say</span><span class="p">(</span><span class="n">juan</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;</span> <span class="s2">&quot;hi, Juan&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby Class:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Class</span> <span class="n">order</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:line_items</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_all_unpaid</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="s1">&#39;paid=0&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">total</span>
</span><span class='line'>      <span class="n">sum</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">line_items</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">li</span><span class="o">|</span> <span class="n">sum</span> <span class="o">+=</span> <span class="n">li</span><span class="o">.</span><span class="n">total</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>A method with &#8220;self.&#8221; is a class-level method</p></blockquote>

<p><strong>Quick access to Instance variable:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Class</span> <span class="no">Car</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:name</span> <span class="c1"># Read &amp; Write</span>
</span><span class='line'>    <span class="kp">attr_reader</span> <span class="ss">:color</span> <span class="c1"># read only</span>
</span><span class='line'>    <span class="kp">attr_writer</span> <span class="ss">:weight</span> <span class="c1"># write only</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Public / Private / Protected :</strong></p>

<blockquote><p>Public for everyone, protected for instances with same class, private instance only.</p></blockquote>

<p><strong>Modules:</strong></p>

<blockquote><p>You can define it but cannot create it. For sharing methods and naming spaces issue.</p></blockquote>

<p><strong>Array:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">7</span><span class="o">.</span><span class="mi">6</span><span class="p">,</span> <span class="s1">&#39;ppl&#39;</span> <span class="o">]</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="o">[</span> <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>&#39;&lt;&lt;&#39; operator (Appending at the end)</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">person</span> <span class="k">in</span> <span class="vi">@people</span>
</span><span class='line'>  <span class="n">age</span> <span class="o">&lt;&lt;</span> <span class="n">person</span><span class="o">.</span><span class="n">age</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Quickly for declaring char array:</strong></p>

<pre><code>a [ 'a', 'b', 'c', 'd'] is equivalent to a %w{a b c d}
</code></pre>

<p><strong>Hash:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sample_hash</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:a</span> <span class="o">=&gt;</span> <span class="s1">&#39;a&#39;</span>
</span><span class='line'>    <span class="ss">:b</span> <span class="o">=&gt;</span> <span class="s1">&#39;b&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>To get value of symbol a:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sample_hash</span><span class="o">[</span><span class="ss">:a</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Hashes and Parameter List:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">redirecto_to</span> <span class="ss">:action</span> <span class="o">=&gt;</span> <span class="s1">&#39;show&#39;</span> <span class="p">,</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">product</span><span class="o">.</span><span class="n">id</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Control Structures:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a&gt;10&#39;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a=3&#39;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;a&lt;10&amp;a!=3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">a</span><span class="o">&lt;</span><span class="mi">100</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>with only 1 expression</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s1">&#39;a&gt;10&#39;</span> <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'><span class="n">distance</span> <span class="o">*=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span> <span class="k">while</span> <span class="n">distance</span> <span class="o">&lt;</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Blocks and Iterators:</strong></p>

<p>Single Line Block</p>

<pre><code>{ ... }
</code></pre>

<p>Multi-line Block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">do</span>
</span><span class='line'>  <span class="n">club</span><span class="o">.</span><span class="n">enroll</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span><span class='line'>  <span class="n">person</span><span class="o">.</span><span class="n">socialize</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>The block can only invoke right after method call.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">greet</span> <span class="p">(</span><span class="s2">&quot;Huang&quot;</span><span class="p">,</span> <span class="s2">&quot;Ni-hao&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hi&quot;</span> <span class="p">}</span> <span class="c1"># greet is a method</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>method_call (parm1, &#8230;) { block }</p></blockquote>

<p><strong>Example usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">animals</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">animal</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">animal</span><span class="p">}</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="nb">print</span> <span class="s1">&#39;I love you&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Exceptions:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>      <span class="c1">#your code here</span>
</span><span class='line'>  <span class="k">rescue</span> <span class="no">BlogDataNotFound</span>
</span><span class='line'>    <span class="c1">#do something</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Require:</strong></p>

<blockquote><p>loading resources outside</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">___FILE___</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;/.../test_helper&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ruby api cosult:</strong></p>

<p><code>$ gem_server</code></p>

<p>Go to <a href="http://localhost:8808">http://localhost:8808</a> for consulting.</p>
]]></content>
  </entry>
  
</feed>
